
Metodología BEM 
El objetivo de BEM es dividir lógicamente las piezas de las que se compone una web
BEM establece que debemos usar clases para nuestro selectores, clases que se dividen en:
    - Bloques. Los bloques son nuestros contenedores más grandes que a su vez contienen elementos u otros bloques.
    - Elementos. Los elementos siempre forman parte de un bloque, normalmente son los botones, textos, imágenes etc.
    - Modificadores. Los modificadores se usan para establecer estilos diferentes a un mismo bloque o elemento.
Un ejemplo de su uso sería, tenemos una galaria de distintas fotos:
    .galeria{} -> esto haría referencia a la galería en general, a todos los elementos
    .galeria_foto{} -> hace referencia solo a las fotos de la galería
    .galeria_foto--ciscular{} -> hace referencia a las fotos con la caracteríastica que son circulares
------------
PUG

Pug es un generador de templates implementado con Javascript que nos permite escribir un pseudocódigo limpio y fácil de leer que será compilado a HTML.
Para entroducir elementos hijos, tenemos que usar un tab o 2 espacios pero no podemos usar ambos en el código a la vez, debemos decidir que usar
    ** En mi opinión, es más sencillo utilizar HTML directamente pero solo por ahora, luego puede ser que cambie

    - Variables en Pug

En Pug las variables debemos llamarlas antes de declarar cualquier tipo de código html para así evitar porblemas.
Para inicializar una variable en Pug sería: 
    - -var nombre-variable = lo-que-queramos-que-sea

Iniciar una varibale con más de un contenido, u array u objeto:
    - -var nombre-variale = [ 'lo-que-sea1', 'lo-que-sea2', 'lo-que-sea3' ]

Para llamar a estas variables en cualquier parte solo tenemos que poner donde queramos llamarla un ' = nombre-variable ' o ' #{nombre-variable o nombre-arreglo} '
    Ej: 
    -var titulo = "Hello World"
    -var parrafos = ['hola1', 'hola2', 'hola3']
    h1 = titulo o h1 #{titulo}
    p = parrafos [0] o p #{parrafos[0]} //el cero es la psoición del elemento que queremos traer a nuestro p o h1 o lo que sea. Se empieza por el 0 y en este caso acaba en el 2 porque solo tenemos 3 elementos

Loops y condicionales en Pug 

Para crear un LOOP en pug tenemos que inicializar el comando 'each' y en el cual vamos a guardar una variable y a ella le vamos a enviar la informació de otra que tengamos los datos que qeuremos correr como loops

    Ej: each variable in datos
    'variable' es donde vamos a tener el loop y 'datos' es donde vamos a sacar la info, en este caso puede ser una lista u objeto 

Para crear CONDICIONALES tenemos la palabra reservada if y el else 

MIXINS

Estos son pedazos de código donde tenemos cierta cantidad de información que podemos tener guardados y poder replicarlos en todo el código. Es igual que una función podemos guardar código replicable. Par allamarla, tenemos que ponerlo en el inicio del código, como las variables con la palabra reservada ' mixin ' y para llamarlo, tenemos que hacerlo con un '+' y el nombre del mixin 
A estos mixins podemos introducirle los parámetros que queramos que muestres entre paréntesis despues del numbre de su variable

Ej: mixin nombre-variable(parametro1, parametro2, parametro3)
    .caja 
        .caja__image: img(src="./images/imagen.png", alt="imagen") / img(src="./images/ , parametro1)
        .caja__contenido
            h3  #{titulos[2]} / h3=parametro2
            p Lorem ipsum dolor sit amet. / p=parametro3
    
    Para llamarlo:
        +nombre-variable
        